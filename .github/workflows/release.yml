# This workflow will build a Java project with Maven, and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://help.github.com/actions/language-and-framework-guides/building-and-testing-java-with-maven

name: Release

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

env:
  GH_TOKEN: ${{ secrets.GH_TOKEN }}
  REGISTRY: ghcr.io

jobs:
  release:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    steps:
    - uses: actions/checkout@v3
      with:
        fetch-depth: 0
        persist-credentials: false
    - name: Set up JDK 11
      uses: actions/setup-java@v3
      with:
        java-version: '11'
        distribution: 'adopt'
        cache: 'maven'
    - name: Maven validate
      run: ./mvnw -B -q validate -Dgib.referenceBranch=$(git rev-parse "@~1")
    - name: Output changed projects
      run: while read -r line; do echo $line; done < changed.projects
    - name: Deploy
      run: ./mvnw -DskipTests deploy -Dgib.referenceBranch=$(git rev-parse "@~1")
      # run: |
      #   if [ -s changed.projects ]; then
      #     echo "Going to release the following nodules:"
      #     while read -r line; do 
      #       echo $line
      #     done < changed.projects
      #   else 
      #     echo "No modules to build"
      #     exit 1
      #   fi
      # run: |
      #   VALUE="$(jq -nR [inputs] changed.projects | jq -c 'map(select(length > 0))')"
      #   echo "$VALUE"
#    - name: Setup Node.js
#      uses: actions/setup-node@v3
#      with:
#        node-version: 'lts/*'
#        cache: 'npm'
#        cache-dependency-path: .github/package-lock.json
#    - name: setup semantic-release
#      run: npm install semantic-release @semantic-release/exec @semantic-release/git @semantic-release/changelog @semantic-release-plus/docker -D
#    - name: release
#      run: npx semantic-release
#      env:
#        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
#    - name: Log in to the Container registry
#      uses: docker/login-action@v2
#      with:
#        registry: ${{ env.REGISTRY }}
#        username: ${{ github.actor }}
#        password: ${{ secrets.GH_TOKEN }}
#    - name: Docker push
#      env:
#        PUSH_REGISTRY: ${{ format('{0}/{1}', env.REGISTRY, 'dudu876') }}
#      run: |
#        echo "Pushing image to ECR..."
#        for module in $(cat changed.projects); do
#          docker images | grep $module | grep -v latest | while read -r line; do
#            IFS=' ' read -r repo tag a <<< "$line"
#            echo "Pushing $repo:$tag..."
#            docker tag $repo:$tag $PUSH_REGISTRY/$repo:$tag
#            docker tag $repo:latest $PUSH_REGISTRY/$repo:latest
#            docker push $PUSH_REGISTRY/$repo --all-tags -q
#          done
#        done
    # - name: release core
    #   working-directory: ./core
    #   run: npx semantic-release
    #   env:
    #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    #     DOCKER_USERNAME: Dudu876
    #     DOCKER_PASSWORD: ${{ secrets.GITHUB_TOKEN }}
    # - name: release 1
    #   working-directory: ./service1
    #   run: npx semantic-release
    #   env:
    #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    #     DOCKER_USERNAME: Dudu876
    #     DOCKER_PASSWORD: ${{ secrets.GITHUB_TOKEN }}
    # - name: release 2
    #   working-directory: ./service2
    #   run: npx semantic-release
    #   env:
    #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    #     DOCKER_USERNAME: Dudu876
    #     DOCKER_PASSWORD: ${{ secrets.GITHUB_TOKEN }}
    # - name: commit changelog
    #   run: |
    #       git config --global user.name 'semantic-release-bot'
    #       git config --global user.email 'semantic-release-bot@martynus.net'
    #       git add '**/CHANGELOG.md' .
    #       git commit -m "chore(changelog): Update CHANGELOGs [skip ci]"
    #       git push
  # release:
  #   needs: setup
  #   runs-on: ubuntu-latest
  #   if: ${{ needs.setup.outputs.matrix != '[]' && needs.setup.outputs.matrix != '' }}
  #   strategy:
  #     matrix:
  #       value: ${{fromJson(needs.setup.outputs.matrix)}}
  #       exclude:
  #       - value: service1
  #       - value: service2
  #   steps:
  #   - uses: actions/checkout@v3
  #     with:
  #       fetch-depth: 0
  #       persist-credentials: false
  #   - name: Set up JDK 11
  #     uses: actions/setup-java@v2
  #     with:
  #       java-version: '11'
  #       distribution: 'adopt'
  #       cache: maven
  #   - name: Setup Node.js
  #     uses: actions/setup-node@v2
  #     with:
  #       node-version: 'lts/*'
    # - name: Build with Maven
    #   run: ./mvnw -B package
    # - name: setup semantic-release
    #   run: npm install -g semantic-release @semantic-release/exec @semantic-release/git @semantic-release/changelog @semantic-release-plus/docker -D
    # - run: cp .releaserc.json ${{ matrix.value }}/.releaserc.json
    # - run: sed -i -e 's/MODULE/${{ matrix.value }}/g' ${{ matrix.value }}/.releaserc.json

    # - name: release 1
    #   working-directory: ./service1
    #   run: npx semantic-release
    #   env:
    #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    #     DOCKER_USERNAME: Dudu876
    #     DOCKER_PASSWORD: ${{ secrets.GITHUB_TOKEN }}